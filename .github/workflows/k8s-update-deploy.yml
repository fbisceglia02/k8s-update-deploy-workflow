name: Re-deploy image to kubernetes

on:
  workflow_dispatch:
  
jobs:
  test-job:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Azure CLI         
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Login to Azure         
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRETS }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Merge the cluster to the current config        
        run: |
          az aks get-credentials --resource-group AKS-Cluster-ssa_group --name AKS-Cluster-ssa

      - name: Turn on the cluster        
        run: | 
          az aks start -g AKS-Cluster-ssa_group -n AKS-Cluster-ssa

      - name: Get deployments         
        run: |
          kubectl get deployments --no-headers

      - name: Update frontend deployment
        shell: bash
        run: |
          cd kubernetes
          cd dev
          cd deployments
          echo "current location is "
          pwd
          echo "in the current location, we have these files"
          ls

          DEPLOYMENT_NAME="frontend-website-mr"

          # Try to get the deployment
          kubectl get deployment "$DEPLOYMENT_NAME" >/dev/null 2>&1

          # Check the exit code of the kubectl command
          if [ $? -eq 0 ]; then
            echo "Deployment $DEPLOYMENT_NAME exists."
            kubectl delete deployment $DEPLOYMENT_NAME --force
          else
            echo "The deployment \"$DEPLOYMENT_NAME\" has already been deleted."
          fi

          # in ogni caso
          kubectl apply -f frontend-website-mr-deploy.yaml
          
      - name: Check if deployment is up&running
        shell: bash
        run: |
          sleep 5s
          expected_replicas=$(kubectl get deploy frontend-website-mr -o jsonpath={.status.replicas})
          if [ $expected_replicas -ne 2 ]; then
            echo "number of expected replicas wrong"
            exit 1 
          fi
          ready_replicas=$(kubectl get deploy frontend-website-mr -o jsonpath={.status.readyReplicas})

          are_replicas_ready=$(( int_var1 == int_var2 ))

          i=1
          while (( i < 5 && are_replicas_ready == 0 )); do  
            echo "error: some replicas containers failed to start, waiting 5s and retrying..."
            sleep 5
            (( i++ ))
            if (( i == 5 )); then
              echo "Error: too many attempts, containers are not coming up."
              exit 1
            fi 
          done


      - name: Shut down the cluster
        run: | 
          az aks stop -g AKS-Cluster-ssa_group -n AKS-Cluster-ssa